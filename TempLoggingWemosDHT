#include <ESP8266TelegramBOT.h>
#include <ESP8266HTTPClient.h>
#include <ESP8266WiFi.h>
#include <DHT.h>
#define DHTPIN D4
#define DHTTYPE DHT11 
#define BOTtoken " *** "
#define BOTname "WittyLDR"
#define BOTusername "WittyLDRBot"
#define myUserID " *** "
#define IFTTTKey " *** "

const char* ssid = "Talli 1";
const char* password = " *** ";

WiFiServer server(80);
DHT dht(DHTPIN, DHTTYPE);
TelegramBOT bot(BOTtoken, BOTname, BOTusername);

void setup() 
{
  Serial.begin(115200);
  delay(1000);
  dht.begin();
  Serial.print(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  server.begin();
  Serial.println(WiFi.localIP()); 
}
 
void loop() 
{

 // Read the temperature and humidity
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  if (isnan(h) || isnan(t)) 
    {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }

  // Serial logging
  Serial.print("Temperature: "); Serial.print(t);
  Serial.print(" degrees Celsius Humidity: "); Serial.print(h);
  Serial.println("\n");
  delay(60000); // TODO: use millis()

  // IFTTT Data Logging
  HTTPClient http;
  http.begin("http://maker.ifttt.com/trigger/templog/with/key/" + String(IFTTTKey));
  http.addHeader("Content-Type", "application/json");
  http.addHeader("NULL", "NULL");
  int httpCode = http.POST("{\"value1\":" + String(t) + ",\"value2\":" + String(h) + " }");
  Serial.println(httpCode);
  http.end();

  // if the sensor is on fire, send Telegram message
  if(t > 40) {
      Serial.println("Sending Telegram message...");
      bot.sendMessage(String(myUserID), String(t) + " astetta", "");
      delay(60000);
     }

}
